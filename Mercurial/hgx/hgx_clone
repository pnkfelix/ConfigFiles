#!/bin/bash
#
# create a client 
#
#set -x
set -e

CMD=`basename ${0}`
USAGE="Usage: ${CMD/_/ } p4_depot_path to_local_dir [starting_cl_nbr]\n"\
"\nAn hg clone of an associated p4 clientspec, both newly created, are\n"\
"made accessible under a sub-directory (2nd parameter) of the current\n"\
"directory.  The hg clone does not contain any p4 history unless an\n"\
"optional 3rd parameter (changelist number) is provided.  The directory\n"\
"structure created has the following form:\n"\
"\n\t<2nd-parameter>/\n"\
"\t\t/mirror\t- perforce workarea mapped here (do not use)\n"\
"\t\t/clone\t- hg clone of p4 depot\n"\
"\nThe hg perfarce extension must be active for this setup to work\n"\
"and the hg commands pull/push can be used to retrieve (and submit)\n"\
"changes to the p4 depot.\n"\
"\nThe depot parameter must be a complete depot path (i.e. accessible \n"\
"via p4 dirs //depot/...) and must not contain any trailing characters \n"\
"such as / , * or ...\n"\
"\nDirectories listed in ./p4-exclude-dirs will not be in the clone.\n"\
"\nAny p4 commands on this mapped repo should use the created clientspec,\n"\
"namely, (p4_user)-(2nd_parameter).  Additionally when you wish to remove\n"\
"this mapped repo 'hgx_destroy' should be used.\n"\
"\nThe convenience commands 'hgx_info' and 'hgx_edit_pending' provide\n"\
"detailed information about the p4 mapping of the repo and allow easy\n"\
"access to any pending p4 changelists, respectively.  Both are bash\n"\
"scripts that can be run in any repo sub-directory.\n"\
"\nIt is recommened that perfarce be configured with 'submit=False', which\n"\
"means that 'hg push' will create a changelist but not automatically\n"\
"submit it (use 'hg p4submit' to do so).  Also 'keep' should be set to\n"\
"False, so that perfarce does not litter the p4 workarea (./mirror).\n"\
"\n   @see http://mercurial.selenic.com/wiki/PerfarceExtension\n"\
"   @see related commands hgx_info, hgx_edit_pending, hgx_destroy\n"\
"   @see commands  branch_pull, branch_push and branch_create\n"\
"\n e.g. hgx clone //depot/users/rickr/mystuff stuff \n"\
"      hgx clone //depot/users/rickr/mystuff biggerstuff 742343\n"

[ "$1" == "--one-line-help" ] && echo -e "   clone - make an hg repo of perforce depot location,  optionally including history" && exit 0
if [ "$#" == "0" ]; then
	echo -e "$USAGE"
	exit 1
fi

function die() {
	echo $*; exit 2
}

# used by hgx nest to override the default exclude file handling
[ "$1" == "--extra-excludes-file" ] && EXCL_FILE=$2 && shift && shift

RES=`p4 login -s` 
DEPOT=${1%/} ; shift
CHK=`p4 dirs ${DEPOT} 2>&1 | cut -f 3 -d ' '`
if [[ "${CHK}" != "${DEPOT}" ]]; then
	die "Not a valid depot directory - Try 'p4 dirs ${DEPOT}' to verify the location"
fi

USER=`p4 user -o | grep ^User: | cut -f 2`
SERVER=`p4 info | grep 'Server address' | cut -d ' ' -f 3`
WD=${1%/}
BNAME=`basename $WD`
shift || die 'Need to specify a local target directory'

# dont clobber an existing clientspec
CLIENT="${USER}-${HGX_P4_SPEC_PREFIX}${BNAME}"
if [[ "`p4 clients -u ${USER} | grep ${CLIENT} | cut -d ' ' -f 2`" = ${CLIENT} ]]; then 
	die "clientspec ${CLIENT} already exists; 'p4 client -o ${CLIENT}' to see its contents or hgx destroy ${BNAME} -f"
fi

WD=`pwd`/`echo $WD | sed 's%[\*\./]*$%%'`
P4WD=$WD/.mirror-p4-dir-nothing-to-see-here
HGWD=$WD/clone
mkdir -p ${P4WD} ; touch $P4WD/wrong-way-go-back

# optional exclusion list
EXCL=`hgx-p4-excludes ${DEPOT} ${CLIENT} ${EXCL_FILE}`

# create clientspec
echo -e "# Autogenerated client spec"\
	 	"\nClient: ${CLIENT}\n"\
		"\nOwner: ${USER}\n"\
		"\nHost: \n"\
		"\nDescription: Auto-generated to be used with perfarce\n"\
		"\nRoot: ${P4WD}\n"\
		"\nView: ${DEPOT}/... //${CLIENT}/..."\
		"\n${EXCL}"\
		| p4 client -i 

START="@${1}"
shift || START='#head'
START=`p4 -c ${CLIENT} changes -m 2 ${P4WD}/...${START} | tail -1 | cut -d ' ' -f 2`
RECENT=`p4 -c ${CLIENT} changes -m 1 ${P4WD}/... | cut -d ' ' -f 2`
echo 'on client' ${CLIENT} 'cloning repo to ./'${HGWD}' from changelist' ${START} 'to' ${RECENT}
[ ${START} != ${RECENT} ] && OPT="--startrev ${START} -r ${RECENT}"
hg -v --config perfarce.keep=True $* clone --noupdate --encodingmode=ignore --traceback ${OPT} p4://${SERVER}/${CLIENT} ${HGWD}

echo "cleaning up after successful clone"
p4 -c ${CLIENT} sync ${P4WD}/...#0 &> /dev/null
(find ${P4WD}/ -type d -d -exec rmdir {} \; 2> /dev/null) 

# update can fail with case-collision
echo "updating local directory via 'hg update' "
set +e
hg -R ${HGWD} update tip
[[ $? -ne 0 ]] && echo "ERROR: hg update failed.  If case-collision error try 'cd ${WD}/clone; hgx_casefixup tip; hg update -C tip'"
echo -e "hg repo available at" ${HGWD}
